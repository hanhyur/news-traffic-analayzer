server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/news_traffic_db
    username: user
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    show-sql: true
    defer-datasource-initialization: true

  data:
    redis:
      host: localhost
      port: 6379

  kafka:
    bootstrap-servers: localhost:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            add:
              type:
                headers: false
    consumer:
      group-id: news-traffic-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.example.newstrafficanalyzer.domain.traffic.model"
            use:
              type:
                headers: false
      auto-offset-reset: earliest

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    groups-order: DESC
  api-docs:
    path: /api-docs

app:
  kafka:
    topic: news.traffic.topic